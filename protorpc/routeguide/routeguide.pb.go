// Code generated by protoc-gen-go. DO NOT EDIT.
// source: routeguide.proto

package routeguide

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Doc struct {
	HTML                 []byte   `protobuf:"bytes,1,opt,name=HTML,proto3" json:"HTML,omitempty"`
	Collection           string   `protobuf:"bytes,2,opt,name=Collection,proto3" json:"Collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Doc) Reset()         { *m = Doc{} }
func (m *Doc) String() string { return proto.CompactTextString(m) }
func (*Doc) ProtoMessage()    {}
func (*Doc) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4a1fa0460de48b1, []int{0}
}

func (m *Doc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Doc.Unmarshal(m, b)
}
func (m *Doc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Doc.Marshal(b, m, deterministic)
}
func (m *Doc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Doc.Merge(m, src)
}
func (m *Doc) XXX_Size() int {
	return xxx_messageInfo_Doc.Size(m)
}
func (m *Doc) XXX_DiscardUnknown() {
	xxx_messageInfo_Doc.DiscardUnknown(m)
}

var xxx_messageInfo_Doc proto.InternalMessageInfo

func (m *Doc) GetHTML() []byte {
	if m != nil {
		return m.HTML
	}
	return nil
}

func (m *Doc) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type Result struct {
	Answer               string   `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4a1fa0460de48b1, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func init() {
	proto.RegisterType((*Doc)(nil), "routeguide.Doc")
	proto.RegisterType((*Result)(nil), "routeguide.Result")
}

func init() { proto.RegisterFile("routeguide.proto", fileDescriptor_f4a1fa0460de48b1) }

var fileDescriptor_f4a1fa0460de48b1 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0xca, 0x2f, 0x2d,
	0x49, 0x4d, 0x2f, 0xcd, 0x4c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0x59, 0x72, 0x31, 0xbb, 0xe4, 0x27, 0x0b, 0x09, 0x71, 0xb1, 0x78, 0x84, 0xf8, 0xfa, 0x48,
	0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x04, 0x81, 0xd9, 0x42, 0x72, 0x5c, 0x5c, 0xce, 0xf9, 0x39, 0x39,
	0xa9, 0xc9, 0x25, 0x99, 0xf9, 0x79, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x48, 0x22, 0x4a,
	0x0a, 0x5c, 0x6c, 0x41, 0xa9, 0xc5, 0xa5, 0x39, 0x25, 0x42, 0x62, 0x5c, 0x6c, 0x89, 0x79, 0xc5,
	0xe5, 0xa9, 0x45, 0x60, 0xfd, 0x9c, 0x41, 0x50, 0x9e, 0x91, 0x03, 0x17, 0x57, 0x10, 0xc8, 0x2a,
	0x77, 0x90, 0x55, 0x42, 0x46, 0x5c, 0xec, 0xee, 0xa9, 0x25, 0x60, 0xa3, 0xf9, 0xf5, 0x90, 0x1c,
	0xe5, 0x92, 0x9f, 0x2c, 0x25, 0x84, 0x2c, 0x00, 0x31, 0x55, 0x89, 0x41, 0x83, 0x31, 0x89, 0x0d,
	0xec, 0x62, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8a, 0xbd, 0x8c, 0xd3, 0xc5, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouteGuideClient is the client API for RouteGuide service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouteGuideClient interface {
	GetHTML(ctx context.Context, opts ...grpc.CallOption) (RouteGuide_GetHTMLClient, error)
}

type routeGuideClient struct {
	cc *grpc.ClientConn
}

func NewRouteGuideClient(cc *grpc.ClientConn) RouteGuideClient {
	return &routeGuideClient{cc}
}

func (c *routeGuideClient) GetHTML(ctx context.Context, opts ...grpc.CallOption) (RouteGuide_GetHTMLClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RouteGuide_serviceDesc.Streams[0], "/routeguide.RouteGuide/GetHTML", opts...)
	if err != nil {
		return nil, err
	}
	x := &routeGuideGetHTMLClient{stream}
	return x, nil
}

type RouteGuide_GetHTMLClient interface {
	Send(*Doc) error
	CloseAndRecv() (*Result, error)
	grpc.ClientStream
}

type routeGuideGetHTMLClient struct {
	grpc.ClientStream
}

func (x *routeGuideGetHTMLClient) Send(m *Doc) error {
	return x.ClientStream.SendMsg(m)
}

func (x *routeGuideGetHTMLClient) CloseAndRecv() (*Result, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Result)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RouteGuideServer is the server API for RouteGuide service.
type RouteGuideServer interface {
	GetHTML(RouteGuide_GetHTMLServer) error
}

func RegisterRouteGuideServer(s *grpc.Server, srv RouteGuideServer) {
	s.RegisterService(&_RouteGuide_serviceDesc, srv)
}

func _RouteGuide_GetHTML_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RouteGuideServer).GetHTML(&routeGuideGetHTMLServer{stream})
}

type RouteGuide_GetHTMLServer interface {
	SendAndClose(*Result) error
	Recv() (*Doc, error)
	grpc.ServerStream
}

type routeGuideGetHTMLServer struct {
	grpc.ServerStream
}

func (x *routeGuideGetHTMLServer) SendAndClose(m *Result) error {
	return x.ServerStream.SendMsg(m)
}

func (x *routeGuideGetHTMLServer) Recv() (*Doc, error) {
	m := new(Doc)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RouteGuide_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routeguide.RouteGuide",
	HandlerType: (*RouteGuideServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetHTML",
			Handler:       _RouteGuide_GetHTML_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "routeguide.proto",
}
